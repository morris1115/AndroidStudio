1. 레이아웃의 기본개념
- 레이아웃은 ViewGroup 클래스로 부터 상속받으며 내부에 무엇을 담는 용도로 쓰인다. 즉, 레이아웃 안에 존재하는 위젯을 배치하게 해준다.
*** 레이아웃 속성 ***
- orientation : 레이아웃 안에 배치할 위젯을 수직 또는 수평 방향을 설정
- gravity : 레이아웃 안에 배치할 위젯의 정렬 방향을 좌측, 우측, 중앙 등으로 설정
- padding : 레이아웃 안에 배치할 위젯의 여백을 설정 한다.
- layout_weight : 레이아웃이 전체 화면에서 차지하는 공간의 가중값을 설정하는데, 여러 개의 레이아웃이 중복될 때 주로 사용한다.
- baselineAligend : 레이아웃 안에 배치할 위젯을 보기 좋게 정렬한다.

- 레이 아웃도 View 클래스의 하위 클래스 이므로 View 클래스의 XML 속성 및 메소드를 모두 사용할 수 있다.

2. 레이아웃의 종류
	@ LinearLayout( 선형 레이아웃)
	- 레이아웃의 왼쪽 위부터 아래쪽 또는 오른쪽으로 차례로 배치
	
	@ RelativeLayout(상대 레이아웃)
	- 위젯 자신이 속한 레이아웃의 상하좌우 위치를 지정하여 배치하고나 다른 위젯으로부	터 상대적인 위치를 지정한다.
	
	@ TableLayout(테이블 레이아웃)
	- 위젯을 행과 열의 개수를 지정한 테이블 형태로 배열한다.
	
	@ GridLayout(그리드 레이아웃)
	- 테이블레이아웃과 비슷하지만 행 또는 열을 확장하여 다양하게 배치할 때 더 편리하다.

	@ FrameLayout( 프레임 레이아웃)
	- 위젯을 왼쪽 위에 일률적으로 겹쳐서 배치하여 중복되어 보이는 효과를 낼 수 있다. 여러 개	의 위젯을 배치한 후 상황에 따라서 필요한 위젯을 보이는 방식에 주로 사용한다.

2-1. LinearLayout의 형태
1) orientation 속성
	- 선형 레이아웃의 가장 기본적인 속성은 orientation이며, 값으로는 vertical과 horizontal이 나	올 수 있다. vertical은 선형 레이아웃 안에 포함될 위젯의 배치를 왼쪽 위부터 수직 방향으로 	쌓겠다는 의미 이고, horizontal은 수형 방향으로 쌓겠다는 의미이다.

2) gravity와 layout_gravity 속성
	- gravity 속성은 레이아웃 안의 위젯을 어디에 배치할 것인지를 결정하며 값으로는 left, right, 	center, top, bottom 등을 사용할 수 있다.
	- 2개를 조합해서 right | bottom 처럼 사용가능 하다.
	- gravity 속성이 자신에 포함된 자신( 위젯) 을 어디에 위치시길지 결정한다면, layout_gravity		는 자신의 위치를 부모(레이아웃)의 어디쯤에 위치시킬지를 결정한다.
	- gravity는 레이아웃에 layout_gravity는 위젯에 많이 지정한다.

3) baselineAligened 속성
	- baselineAligened 속성은 크기가 다른 위젯들을 보기 좋게 정렬해주는 것으로 true와 	false 값을 지정할 수 있다.

*** 중복 선형 레이아웃 형태 ***
	- 안드로이드 화면을 구성하다 보면 위젯을 한 화면에서 수평과 수직으로 다양하게 배	치해야 하는 경우가 있다. 이때는 선형 레이아웃 안에 선형 레이아웃을 생성하는 방식	을 사용한다.
		<LienarLayout>
			<LienarLayout>
				위젯...
			</LienarLayout>
			<LienarLayout>
				위젯...
			</LienarLayout>
			<LienarLayout>
				위젯...
			</LienarLayout>
		</LienarLayout>

4) layout_weight 속성
	- 선형 레이아웃을 여러 개 사용할 경우 각 레이아웃의 크기를 지정해야한다.
	- 레이아웃을 화면 전체에 채워야 하기 때문에 pd 등 단위 지정보다는 주로 전체화면에 	대한 비율(%)로 지정한다.

2-2 RelativeLayout(상대 레이아웃)
